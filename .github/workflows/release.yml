name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          build/js/node_modules
          kotlin-js-store/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json', '**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Install JS dependencies
      run: |
        cd build/js
        yarn install --frozen-lockfile
        
    - name: Run tests
      run: ./gradlew testDebugUnitTest
      
    - name: Build Android APK
      run: ./gradlew assembleRelease
      
    - name: Build JS
      run: ./gradlew :composeApp:jsBrowserDistribution
      
    - name: Create release APK
      run: |
        mkdir -p release
        cp composeApp/build/outputs/apk/release/*.apk release/
        cp composeApp/build/dist/js/productionExecutable/*.js release/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*.apk
          release/*.js
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
